(* semigroup *)

tex
  title = "Semi-group"
  author = "C. Raffalli"
  institute = "Chalmers University of Technology"
  documents = math doc
.

flag auto_lvl 3.

Module semigroup.

  (*!math doc
    \section{Definitions and first properties.}
  *)

  Sort set 0.	
  Cst G : set -> prop.
  Cst rInfix[3] x "op" y : set -> set -> set.
  tex_syntax $op rInfix[3] x "\\circ" y. 

  claim op_total /\x,y:G  G (x op y).
  new_intro -t total op_total.
  tex_syntax op_total "totality of $\\circ$".

  claim assoc /\x,y,z:G x op (y op z) = (x op y) op z.
  new_equation -b assoc.
  tex_syntax assoc "associativity of $\\circ$".

  (*! math doc
    \begin{definition} 
      A semi-group $< \[ G \] , \[ $op \] >$ is a set (or predicate) \[
    G \] with an associative 
      binary function \[ x op y \].
      This is expressed by the following axiom:
       $$\begin{array}{ll}
       \[ $$op_total \] &  (\[ op_total \])\cr
       \[ $$assoc \]    &  (\[ assoc \]) 
       \end{array}$$
    \end{definition}

    The binary function is written in a right-associative way:
        $$ \[ x op y op z\] = \[ x op {{ y  op z }} \] $$
  *)  

  (*! doc

    In ascii, the group \[ G \] is written \{ G \} and the binary
    function \[ $op \] is written \{ $op \} , with a right infix
    syntax and a priority level of 3. The axiom \[ op_total \] (\{
    op_total \} in ascii) is added as an introduction rule for \[ G \]
    (with abbreviation \verb#op#) and the axiom \[ assoc \] (\{ assoc
    \} in ascii) is added to the rewriting rules.  
  *)

end.

Module sub.

  Use semigroup.

  Cst H : set -> prop.

  claim sub.H      /\x:H  G x.
  tex_syntax sub.H Math "\\text{subset}_{\\text{H}}".
  claim op_total.H /\x,y:H  H (x op y).

  new_intro sub sub.H.

  goal /\x,y,z:H x op (y op z) = (x op y) op z.
  trivial.
  save assoc.H.

  Use semigroup with
    G -> H
  | set -> _  
  | op -> _ 
  | _ -> _.H 
  .

  (*!math doc

    \begin{definition} Given a semi-group \[ G \] , a sub-semi-group of
      \[ G \] is a set \[ H \] verifying the following:
        $$\begin{array}{ll}
          \[ $$sub.H \] & (\[ sub.H \]) \cr
          \[ $$op_total.H \] & (\[ op_total.H \]) \cr
	\end{array}$$
    \end{definition}

    \begin{proposition}
      From this, it is easy to see that if \[ H \] is a sub-semi-group
      of a 
      semi-group $ < \[ G \] , \[$op\] > $ then $ < \[ H \] , \[ $op
      \] > $ is
      itself a semi-group. The only thing to prove is \[ $$assoc.H \] 
      (\[assoc.H\]) which is immediate using \[ sub.H \].
    \end{proposition}
  *)

end.

Module hmorph.

  (*! math doc
    \section{Homomorphism.}
  *)

  Use semigroup with
    _ -> _.D
  .

  Use semigroup with
    _ -> _.I
  .

  Cst f : set.D -> set.I. 

  claim totality.f /\x:G.D  G.I (f x).
  new_intro -t f totality.f.

  claim compatibility.f /\x1,x2:G.D  f (x1 op.D x2) = f x1 op.I f x2.
  new_equation compatibility.f.

  (*! math doc
    \begin{definition}
    If we consider two semi-groups $ <\[ G.D \] , \[ $op.D \] > $ and 
    $ <\[ G.I \] , \[ $op.I \] > $. A function $ \[ f \] $ is an
    homomorphism from \[ G.D \] to \[ G.I \] if the following holds:
    $$ \begin{array}{ll}
    \[ $$totality.f \] & (\[ totality.f \]) \cr
    \[ $$compatibility.f \] & (\[ compatibility.f \]) \cr
    \end{array}$$
    \end{definition}
  *)

end.

Module hmorph_img.

  Use semigroup.hmorph.

  (* can define Image, but not kernel *)

  def Img y = \/x:G.D y = f x.

  (*! math doc
    \begin{definition}
    The image of such a morphism is defined by:
    $$\[ Img y \] = \[ $$Img y \]. $$
    \end{definition}
  *)

  goal /\x:G.D  Img (f x).
  trivial.
  save intro.Img.
  new_intro -t fI intro.Img.

  goal /\y:Img G.I y.
  trivial.
  save sub.Img.

  goal /\y1,y2: Img  Img (y1 op.I y2).
  intros.
  elim -n [x1] H. rmh H.
  elim -n [x2] H0. rmh H0.
  from Img (f (x1 op.D x2)).
  intro.
  trivial.
  save op_total.Img.

  Use semigroup.sub with
    op -> rInfix[3] x "op.I" y
  | G -> G.I
  | H -> Img
  | _.H -> _.Img
  | _ -> _.I
  .

  (*! math doc
    \begin{proposition}
    We can prove the following about the image of an homomorphism:
    $$\begin{array}{ll}
    \[ $$intro.Img \] & \[ intro.Img \] \cr
    \[ $$sub.Img \] & \[ sub.Img \] \cr
    \[ $$op_total.Img \] & \[ op_total.Img \] \cr
    \multicolumn{2}{l}
    {\text{\[ Img \] is a sub-semi-group of $ < \[ G.I \] , \[ $op.I \] > $}}
    \end{array}$$
    \end{proposition}

    \begin{proof} The three first are immediate and the second and
    third are just what we need to prove the last one. \qed
    \end{proof}
  *)
    
end.

Module hmorph_comp.

  Use hmorph with
    _.D -> _.1
  | _.I -> _.2
  | f -> f
  | _.f -> _.f
  .

  Use hmorph with
    _.D -> _.2
  | _.I -> _.3
  | f -> g
  | _.f -> _.g
  .
  
  def h x = g (f x).

  goal /\x:G.1 (G.3 (h x)).
  trivial.
  save total.h.

  goal /\x,y:G.1 h (x op.1 y) = h x op.3 h y.
  trivial.
  save compat.h.

  Use hmorph with
    _.D -> _.1
  | _.I -> _.3
  | f -> h
  | _.f -> _.h
  .

end.
