Import requis.

(* le but de cet exemple est de montrer que, dans un espace métrique,
l'adhérence de la ré∪ de deux ensembles est égale à la ré∪ des
adhérences. On notera que ceci ne nécessite aucune des propriétés de la
distance et simplement deux propriétés du <.*)

(* On se donne des réels et un ensemble *)
Sort set.
Sort real.

(* R0 représente le réel zéro. On ne peut pas écrire simplement 0 pour
des raisons qu'il serait trop long d'expliquer ici *)
Cst R0 : real.

(* On se donne la relation inférieur sur les réels *)
Cst Infix[5.0] x "<" y : real → real → prop.
def Infix[5.0] x ">" y = y < x.

(* On a besoin de deux lemmes sur < : *)
claim lemme ∀e_1, e_2 >R0 ∃e >R0 (e<e_1 ∧ e<e_2).

claim transitif ∀x,y,z (x<y → y<z → x<z).

(* d x y est la distance de deux éléments de l'ensemble *)
Cst d : set → set → real.

(* Adh A x se lit x est dans l'adhérence de A. Adh A désigne
donc l'adhérence de A et est définit ainsi : *)
def Adh A x  =  ∀e > R0 ∃y ∈ A d x y < e.

goal ∀A ∀B (Adh A ∪ Adh B =  Adh (A ∪ B)).
(*→*)
intros.
intro.
intro.

intros.
intros.
left H.

trivial.
trivial.

intros.
by_absurd.
elim False.

rewrite_hyp H0 demorganl.
lefts H0 $∧ $∃.
apply lemme with H1 and H0.
lefts G $∧ $∃.
apply H with H4.
lefts G $∧ $∃.
left H7.
apply H3 with H7.
trivial +transitif.
apply H2 with H7.
trivial +transitif.
(*→*)
save th.
